<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>41123209協同產品設計</title><link href="./" rel="alternate"></link><link href="./feeds/all.atom.xml" rel="self"></link><id>./</id><updated>2024-06-13T16:09:00+08:00</updated><entry><title>20240613 w17 09</title><link href="./2024-Spring-w17-blog-tutorial%2009.html" rel="alternate"></link><published>2024-06-13T16:09:00+08:00</published><updated>2024-06-13T07:07:30+08:00</updated><author><name>41123209</name></author><id>tag:None,2024-06-13:./2024-Spring-w17-blog-tutorial 09.html</id><summary type="html">&lt;p&gt;根據 https://mde.tw/cd2024/content/index.html 網頁中的期末報告題目說明, 逐一完成下列評量項目&lt;/p&gt;
&lt;h1&gt;評量項目&lt;/h1&gt;
&lt;p&gt;1.請利用 NX1872, 完成可以參與球賽競技 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;根據 https://mde.tw/cd2024/content/index.html 網頁中的期末報告題目說明, 逐一完成下列評量項目&lt;/p&gt;
&lt;h1&gt;評量項目&lt;/h1&gt;
&lt;p&gt;1.請利用 NX1872, 完成可以參與球賽競技的機器人零件與組立件設計, 過程中請拍攝零組件繪製過程, 以 "cd2024 協同產品設計實習期末實習評量項目一, 學號 XXXXXXX" 作為 mp4 影片標題, 上傳至 Youtube 後, 在個人靜態網站中新增標題為 "w17", 格式為 H1 的頁面, 嵌入所完成的項目一 Youtube 影片以及所完成的零組件檔案連結後, 將此網頁網址 (即 https://個人_github帳號.github.io/cd2024/w17) 提交連結回報至評量回傳表的對應欄位中.&lt;/p&gt;
&lt;p&gt;2.請自選上列項目一中某一零件組立過程, 以 NXOpen Python 程式完成組立, 過程中請拍攝 Python Journal 程式組立過程, 以"cd2024 協同產品設計實習期末實習評量項目二, 學號 XXXXXXX" 作為 mp4 影片標題, 上傳至 Youtube 後, 在 "w17" 頁面中嵌入所完成的項目二 Youtube 影片以及所完成的 Python Journal 程式檔案連結 (請放入 downloads 目錄, 並以 .txt 作為副檔名), 將此網頁網址 (即 https://個人_github帳號.github.io/cd2024/w17) 提交連結回報至評量回傳表的對應欄位中.&lt;/p&gt;
&lt;p&gt;3.請將所完成的機器人球員放入 CoppeliaSim 運動場景中 (即 https://mde.tw/cd2024/content/index.html 網頁中的 cd2024_footbasketball_field_specification_step2.7z 場景), 讓球員可以由 ZMQ Remote API 程式控制, 執行後按下 w 鍵後球員可向前移動, 按下 s 後球員可向後移動, 過程中請拍攝 Python 程式執行與球員前後移動過程, 以"cd2024 協同產品設計實習期末實習評量項目三, 學號 XXXXXXX" 作為 mp4 影片標題", 上傳至 Youtube 後, 在 "w17" 頁面中嵌入所完成的項目三 Youtube 影片、場景 .ttt 連結以及所完成的 ZMQ Remote API Python 程式檔案連結 (請放入 downloads 目錄, 並以 .txt 作為副檔名), 將此網頁網址 (即 https://個人_github帳號.github.io/cd2024/w17) 提交連結回報至評量回傳表的對應欄位中.&lt;/p&gt;</content><category term="w17 09"></category><category term="網誌編寫 09"></category></entry><entry><title>20240530 w14 09</title><link href="./2024-Spring-w14-blog-tutorial%2009.html" rel="alternate"></link><published>2024-05-30T16:09:00+08:00</published><updated>2024-06-13T07:05:34+08:00</updated><author><name>41123209</name></author><id>tag:None,2024-05-30:./2024-Spring-w14-blog-tutorial 09.html</id><content type="html">&lt;p&gt;完成鋼球平衡台的零件繪製與組合並錄製成影片&lt;/p&gt;
&lt;h1&gt;零件2和組合&lt;/h1&gt;
&lt;p&gt;我負責零件2和組合&lt;/p&gt;
&lt;p&gt;組合1和組合2因組員零件繪製錯誤而重新錄製&lt;/p&gt;
&lt;p&gt;我重新繪製零件1和零件3跟零件4&lt;/p&gt;</content><category term="w14 09"></category><category term="網誌編寫 09"></category></entry><entry><title>20240509 w12 09</title><link href="./2024-Spring-w12-blog-tutorial%2009.html" rel="alternate"></link><published>2024-05-09T11:09:00+08:00</published><updated>2024-05-09T07:33:51+08:00</updated><author><name>41123209</name></author><id>tag:None,2024-05-09:./2024-Spring-w12-blog-tutorial 09.html</id><summary type="html">&lt;p&gt;協同產品設計實習第十二週實習操作, 各學員利用 NX 1872 繪製鋼球平衡台所需的零組件, 將各分組倉儲設為評分倉儲的子模組, 跨網路操控模擬場景裝置.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;協同產品設計實習第十二週實習操作, 各學員利用 NX 1872 繪製鋼球平衡台所需的零組件, 將各分組倉儲設為評分倉儲的子模組, 跨網路操控模擬場景裝置.&lt;/p&gt;


&lt;h1&gt;將各分組倉儲設為評分倉儲的子模組&lt;/h1&gt;
&lt;p&gt;實習任務二: 將分組倉儲設為評分網站子模組&lt;/p&gt;
&lt;p&gt;2a 評分倉儲: https://github.com/mdecd2024/2astud-2asite&lt;/p&gt;
&lt;p&gt;2b 評分倉儲: https://github.com/mdecd2024/2bstud-2bsite&lt;/p&gt;
&lt;p&gt;以 我們2b 第四組分組倉儲 https://github.com/mdecd2024/2b-midbg4 為例, 設為 2bstud-2bsite 倉儲名稱為 g4 的子模組指令為:&lt;/p&gt;
&lt;p&gt;git submodule add https://github.com/mdecd2024/2b-midbg4 g4&lt;/p&gt;
&lt;p&gt;其餘各班與各組的子模組則依序命名為 g1, g2, g3 ......, 依此類推.&lt;/p&gt;
&lt;p&gt;各班評分倉儲的各組子模組設定完成後, 可以設法依照先前各組整合分組 LaTeX 報告與分組網誌的方法, 整合全班各組項下各學員的網誌文章 (.html 格式) 與執行專案報告 (.pdf 格式)&lt;/p&gt;
&lt;p&gt;請各分組先在各組的分組網誌與分組報告中說明, 該如何將分組整合流程擴大到全班協同?&lt;/p&gt;</content><category term="w12 09"></category><category term="網誌編寫 09"></category></entry><entry><title>20240502 w11 09</title><link href="./2024-Spring-w11-blog-tutorial%2009.html" rel="alternate"></link><published>2024-05-02T11:09:00+08:00</published><updated>2024-05-09T07:34:01+08:00</updated><author><name>41123209</name></author><id>tag:None,2024-05-02:./2024-Spring-w11-blog-tutorial 09.html</id><summary type="html">&lt;p&gt;協同產品設計實習第十一週實習操作, 學習利用 NX 1872 繪製鋼球平衡台所需的零組件.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;協同產品設計實習第十一週實習操作, 學習利用 NX 1872 繪製鋼球平衡台所需的零組件.&lt;/p&gt;


&lt;h1&gt;鋼球平衡台自動控制系統模擬&lt;/h1&gt;
&lt;p&gt;請根據 &lt;a href="https://mde.tw/cd2024/downloads/Solvespace_model%20_2d_for_cd2024_w6.7z"&gt;Solvespace_model _2d_for_cd2024_w6.7z&lt;/a&gt; 零組件尺寸, 利用 &lt;a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EehhlaMDzTxAlOBppbPSoPwBCzsOQxvshtNL8xJel-zbJQ?e=YwKvdH"&gt;Siemens NX1872.7z&lt;/a&gt; (需要登入 @nfu.edu.tw, cd2024 採用電腦安裝的 NX1872 或隨身碟中的 NX1872) 執行零組件繪圖, 完成後請將過程影片放入個人與分組網站中.&lt;/p&gt;
&lt;p&gt;建立協同 Web-based 機電系統模擬設計必須涉及的議題包括：&lt;/p&gt;
&lt;p&gt;如何使用 NX 執行零組件繪圖 - &lt;a href="https://me5763.github.io/lab/assets/books/NX-12-for-Engineering-Design.pdf"&gt;NX 參考資料&lt;/a&gt;
如何使用1872版安裝及可攜版 - &lt;a href="https://mde.tw/cd2024/blog/2024-cd-2b-w5.html#NX1872"&gt;NX1872&lt;/a&gt;
如何啓動及連網認證 - &lt;a href="https://mde.tw/cd2024/blog/2024-cd-2b-w5.html#NX1872"&gt;NX1872&lt;/a&gt;
了解啓動後用戶設定的存檔位置 - &lt;a href="https://mde.tw/cd2024/blog/2024-cd-2b-w5.html#NX1872"&gt;NX1872&lt;/a&gt;
認識 NX 的目錄模組架構 - &lt;a href="https://mde.tw/cd2024/content/NX.html"&gt;NX&lt;/a&gt;
認識 NXOpen Python 程式延伸架構 - &lt;a href="https://mde.tw/cd2024/content/NXOpen.html"&gt;NXOpen&lt;/a&gt;
了解 Journal 程式設定、建立及執行（internal 及 run_journal.exe 用法）
了解如何針對設計繪圖尺寸單位選擇 - 建立新零件檔案時由 Units 選單選則 mm 或 inches
學習草圖建構、參數選用及長出特徵使用 - &lt;a href="https://me5763.github.io/lab/assets/books/NX-12-for-Engineering-Design.pdf"&gt;NX 參考資料&lt;/a&gt;
學習如何完成零件組立 - &lt;a href="https://me5763.github.io/lab/assets/books/NX-12-for-Engineering-Design.pdf"&gt;NX 參考資料&lt;/a&gt;
了解零組件轉檔相關知識（如選用零組件座標系統、STL格式及尺寸比例）
了解如何轉入 CoppeliaSim，如何選擇合用的尺寸及比例
了解如何進行場景組件的座標系統轉換
了解開放式機構及封閉式機構的場景如何設置
認識場景存檔的三種格式（binary與XML間的轉換及應用)及應用時機
瞭解如何運用 Web-based 場景模擬串流
學習如何建立場景控制程式（internal Lua、Python、Remoteapi Python、IPv4 Websocket&amp;amp;ZMQ vs IPv6 Websocket&amp;amp;ZMQ)
了解如何協同整理資料、編寫網誌、建立網際簡報及結案報告&lt;/p&gt;</content><category term="w11 09"></category><category term="網誌編寫 09"></category></entry><entry><title>20240425 w10 09</title><link href="./2024-Spring-w10-blog-tutorial%2009.html" rel="alternate"></link><published>2024-04-25T11:09:00+08:00</published><updated>2024-04-25T06:54:38+08:00</updated><author><name>41123209</name></author><id>tag:None,2024-04-25:./2024-Spring-w10-blog-tutorial 09.html</id><summary type="html">&lt;p&gt;協同產品設計實習的專案實習, 透過 ChatGPT、Gemini 1.5 Pro 與 Claude 3 的協助下進行.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;協同產品設計實習的專案實習, 透過 ChatGPT、Gemini 1.5 Pro 與 Claude 3 的協助下進行.&lt;/p&gt;


&lt;h1&gt;協同資料處理&lt;/h1&gt;
&lt;p&gt;請各班各組根據 &lt;a href="https://gist.githubusercontent.com/mdecycu/8ba6fa28317bc7a784d8350e7bc33580/raw/30b7be16b4870ef54c0677a380a029c9202df356/2a_cd2024_midterm.csv"&gt;2a_cd2024_midterm.csv&lt;/a&gt;, 以及 &lt;a href="https://gist.githubusercontent.com/mdecycu/8ba6fa28317bc7a784d8350e7bc33580/raw/30b7be16b4870ef54c0677a380a029c9202df356/2b_cd2024_midterm.csv"&gt;2b_cd2024_midterm.csv&lt;/a&gt;中的學號、Github 帳號與組別, 設法在各組員與分組網站中, 列出各學員的 cd2024 倉儲、網站, 以及各班各組的期中報告倉儲與網站連結.&lt;/p&gt;</content><category term="w10 09"></category><category term="網誌編寫 09"></category></entry><entry><title>20240411 w7 09</title><link href="./2024-Spring-w7-blog-tutorial%2009.html" rel="alternate"></link><published>2024-04-11T11:09:00+08:00</published><updated>2024-04-25T08:29:52+08:00</updated><author><name>41123209</name></author><id>tag:None,2024-04-11:./2024-Spring-w7-blog-tutorial 09.html</id><summary type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;


&lt;h1&gt;第七周&lt;/h1&gt;</content><category term="w7 09"></category><category term="網誌編寫 09"></category></entry><entry><title>20240328 w6 09</title><link href="./2024-Spring-w6-blog-tutorial%2009.html" rel="alternate"></link><published>2024-03-28T11:09:00+08:00</published><updated>2024-04-25T08:29:39+08:00</updated><author><name>41123209</name></author><id>tag:None,2024-03-28:./2024-Spring-w6-blog-tutorial 09.html</id><summary type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;

&lt;h1&gt;第六周&lt;/h1&gt;</content><category term="w6 09"></category><category term="網誌編寫 09"></category></entry><entry><title>20240321 w5 09</title><link href="./2024-Spring-w5-blog-tutorial%2009.html" rel="alternate"></link><published>2024-03-21T11:09:00+08:00</published><updated>2024-04-25T08:29:34+08:00</updated><author><name>41123209</name></author><id>tag:None,2024-03-21:./2024-Spring-w5-blog-tutorial 09.html</id><summary type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;

&lt;h1&gt;第五周&lt;/h1&gt;</content><category term="w5 09"></category><category term="網誌編寫 09"></category></entry><entry><title>20240314 w4 09</title><link href="./2024-Spring-w4-blog-tutorial%2009.html" rel="alternate"></link><published>2024-03-14T11:09:00+08:00</published><updated>2024-04-25T08:29:00+08:00</updated><author><name>41123209</name></author><id>tag:None,2024-03-14:./2024-Spring-w4-blog-tutorial 09.html</id><summary type="html">&lt;p&gt;協同產品設計實習的第四週, 各分組需要明確界定任務需求與分工時序, 隨著各組協同設計流程的進行, 分組倉儲與網站的改版越發複雜, 此時若導入 Source Tree 協助各組員更清楚看到倉儲改版架構, 另外 Git Branch 的應用.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;協同產品設計實習的第四週, 各分組需要明確界定任務需求與分工時序, 隨著各組協同設計流程的進行, 分組倉儲與網站的改版越發複雜, 此時若導入 Source Tree 協助各組員更清楚看到倉儲改版架構, 另外 Git Branch 的應用.&lt;/p&gt;

&lt;h1&gt;第四周&lt;/h1&gt;
&lt;p&gt;Odoo 參考文章中英並列
教學影片: &lt;/p&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;title&gt;連結至 以第六組為例, 利用 Codespaces 維護倉儲內容&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;p&gt;
    &lt;/p&gt;
  &lt;a href="[https://mde.tw/cd2024/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/8ba6fa28317bc7a784d8350e7bc33580/raw//list_c4da5bed66516f7808811839885aedd946e20f17bd2024_midterm_url.py](https://nfuedu-my.sharepoint.com/personal/yen_nfu_edu_tw/_layouts/15/stream.aspx?id=%2Fpersonal%2Fyen%5Fnfu%5Fedu%5Ftw%2FDocuments%2F2024%2Fcd2024%2Fvideo%2Fcd2024%5F2b%5Fw4%5F%E4%BB%A5%E7%AC%AC%E5%85%AD%E7%B5%84%E7%82%BA%E4%BE%8B%2C%20%E5%88%A9%E7%94%A8%20Codespaces%20%E6%94%B9%E7%89%88%2Emp4&amp;nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;ga=1&amp;referrer=StreamWebApp%2EWeb&amp;referrerScenario=AddressBarCopied%2Eview)" target="_blank"&gt;以第六組為例, 利用 Codespaces 維護倉儲內容&lt;/a&gt;
&lt;/body&gt;
&lt;/html&gt;
&lt;p&gt;教學影片: &lt;/p&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;title&gt;連結至 如何利用 Github Actions 編譯 LaTeX 得到分組 pdf 報告&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;p&gt;
    &lt;/p&gt;
  &lt;a href="https://nfuedu-my.sharepoint.com/personal/yen_nfu_edu_tw/_layouts/15/stream.aspx?id=%2Fpersonal%2Fyen%5Fnfu%5Fedu%5Ftw%2FDocuments%2F2024%2Fcd2024%2Fvideo%2Fcd2024%5F2b%5Fw4%5F%E5%A6%82%E4%BD%95%E4%B8%8A%E5%82%B3%20LaTeX%20%E7%AF%84%E4%BE%8B%E6%AA%94%E6%A1%88%E4%B8%A6%E5%88%A9%E7%94%A8%20Actions%20%E5%9C%A8%E7%B7%9A%E4%B8%8A%E7%B7%A8%E8%AD%AF%E5%87%BA%20pdf%2Emp4&amp;nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;ga=1&amp;referrer=StreamWebApp%2EWeb&amp;referrerScenario=AddressBarCopied%2Eview" target="_blank"&gt;如何利用 Github Actions 編譯 LaTeX 得到分組 pdf 報告&lt;/a&gt;
&lt;/body&gt;
&lt;/html&gt;
&lt;p&gt;教學影片: &lt;/p&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;title&gt;連結至 如何利用 Gitpod 加上 token 取得分組倉儲權限&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;p&gt;
   &lt;/p&gt;
  &lt;a href="https://nfuedu-my.sharepoint.com/personal/yen_nfu_edu_tw/_layouts/15/stream.aspx?id=%2Fpersonal%2Fyen%5Fnfu%5Fedu%5Ftw%2FDocuments%2F2024%2Fcd2024%2Fvideo%2Fcd2024%5F2b%5Fw4%5F%E5%A6%82%E4%BD%95%E4%B8%8A%E5%82%B3%20LaTeX%20%E7%AF%84%E4%BE%8B%E6%AA%94%E6%A1%88%E4%B8%A6%E5%88%A9%E7%94%A8%20Actions%20%E5%9C%A8%E7%B7%9A%E4%B8%8A%E7%B7%A8%E8%AD%AF%E5%87%BA%20pdf%2Emp4&amp;nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&amp;ga=1&amp;referrer=StreamWebApp%2EWeb&amp;referrerScenario=AddressBarCopied%2Eview" target="_blank"&gt;如何利用 Gitpod 加上 token 取得分組倉儲權限&lt;/a&gt;
&lt;/body&gt;
&lt;/html&gt;</content><category term="w4 09"></category><category term="網誌編寫 09"></category></entry><entry><title>20240307 w3 09</title><link href="./2024-Spring-w3-blog-tutorial%2009.html" rel="alternate"></link><published>2024-03-07T11:09:00+08:00</published><updated>2024-04-25T08:28:19+08:00</updated><author><name>41123209</name></author><id>tag:None,2024-03-07:./2024-Spring-w3-blog-tutorial 09.html</id><summary type="html">&lt;p&gt;2024 Spring 協同產品設計實習的第三週, 主要說明如何善用 Github Codespaces 與 Gitpod, 以及將組員倉儲設為分組倉儲的子模組, 同時導入 LaTeX 轉 pdf 機制, 啟動期中分組報告的製作.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 協同產品設計實習的第三週, 主要說明如何善用 Github Codespaces 與 Gitpod, 以及將組員倉儲設為分組倉儲的子模組, 同時導入 LaTeX 轉 pdf 機制, 啟動期中分組報告的製作.&lt;/p&gt;

&lt;h1&gt;第三周&lt;/h1&gt;
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;title&gt;連結至 cd2024 期中分組倉儲與網站&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;p&gt;點擊以下連結以訪問 cd2024 期中分組倉儲與網站：&lt;/p&gt;
  &lt;a href="https://mde.tw/cd2024/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/8ba6fa28317bc7a784d8350e7bc33580/raw//list_cd2024_midterm_url.py" target="_blank"&gt;cd2024 期中分組倉儲與網站&lt;/a&gt;
&lt;/body&gt;
&lt;/html&gt;</content><category term="w3 09"></category><category term="網誌編寫 09"></category></entry><entry><title>20240229 w2 09</title><link href="./2024-Spring-w2-blog-tutorial%2009.html" rel="alternate"></link><published>2024-02-29T11:09:00+08:00</published><updated>2024-04-25T08:28:58+08:00</updated><author><name>41123209</name></author><id>tag:None,2024-02-29:./2024-Spring-w2-blog-tutorial 09.html</id><summary type="html">&lt;p&gt;協同產品設計實習的第二週, 主要利用 Github Classroom 進行協同分組, 除了 Replit, 也可以利用 Github Codespaces 維護個人或分組網站內容.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;協同產品設計實習的第二週, 主要利用 Github Classroom 進行協同分組, 除了 Replit, 也可以利用 Github Codespaces 維護個人或分組網站內容.&lt;/p&gt;

&lt;h1&gt;第二周&lt;/h1&gt;
&lt;p&gt;利用 Github Classroom 指定分組倉儲
由於各分組網站從 Github Classroom 執行配置, 因此該倉儲位於 mdecd2024 帳號下, 雖然各組組員具備對此分組倉儲改版的權限, 但是若將分組倉儲 import 到 Replit, 因為其倉儲擁有者為 mdecd2024, 因此無法從 Replit accoount 項下進行授權, 但是可以利用 ssh-keygen 建立 .ssh 目錄下的 id_rsa 與 id_rsa.pub, 之後除了將公鑰送到 Github 之外, 還需要在 .ssh 目錄中建立 config, 且將倉儲 .git/config 中的 https 協定改為 SSH.&lt;/p&gt;
&lt;p&gt;根據上述流程, 可以在 Replit 中以 SSH 模式取得對 Github 帳號下特定倉儲的改版全縣, 只不過 Replit 的免費帳號環境會不定時刪除 /home/runner/.ssh 目錄中的授權資料, 因此若要使用 Replit 維護從 Github Classroom 取得授權的分組倉儲, 必須使用程式方法配置 .ssh 中的 id_rsa 與 config 檔案.&lt;/p&gt;
&lt;p&gt;範例分組倉儲: https://github.com/mdecd2024/test-ag1
利用 Codespaces 維護倉儲與網站
說明如何利用 Github Codespaces 維護網站內容&lt;/p&gt;
&lt;p&gt;由於 Github Codespaces 免費帳號目前每月可以使用 120 core hours, 因此使用者可以選擇在 Github 倉儲中編輯 markdown 目錄中的網誌 .md 文章後, 只在需要利用 pelican 轉檔或啟動編輯 config/content.htm 與轉靜態網頁內容時, 才啟用 Codespaces. 如此可以最佳化使用 Codespaces 的免費 core hours.&lt;/p&gt;
&lt;p&gt;在近端執行動態網站
說明如何利用近端可攜系統維護分組網站&lt;/p&gt;</content><category term="w2 09"></category><category term="網誌編寫 09"></category></entry><entry><title>2024 Spring 課程09</title><link href="./2024-Spring-w1-blog-tutorial%2009.html" rel="alternate"></link><published>2024-02-18T11:09:00+08:00</published><updated>2024-04-25T08:29:50+08:00</updated><author><name>41123209</name></author><id>tag:None,2024-02-18:./2024-Spring-w1-blog-tutorial 09.html</id><summary type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;
</summary><content type="html">&lt;p&gt;2024 Spring 網際內容管理與協同產品設計實習課程教學導引.&lt;/p&gt;


&lt;h1&gt;內容管理系統&lt;/h1&gt;
&lt;p&gt;使用者可以自行利用 &lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; 倉儲作為 Template, 建立自己的網站內容管理系統.&lt;/p&gt;
&lt;p&gt;引用網站網址連結的方法:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; - 在文章中多次引用同一個網站連結時, 可以使用此種方法.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;https://github.com/mdecycu/cmsimde_site&lt;/a&gt; - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://github.com/mdecycu/cmsimde_site"&gt;cmsimde_site&lt;/a&gt; - 也可以使用 Markdown 的標準網站連結使用格式.&lt;/p&gt;
&lt;pre class="brush: python"&gt;
# 引用 Python 程式的方法
for i in range(10):
    print(i, "列出字串")
&lt;/pre&gt;

&lt;p&gt;也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼.&lt;/p&gt;
&lt;p&gt;從 1 累加到 100:&lt;/p&gt;
&lt;p&gt;&lt;button id="add1to100"&gt;1 add to 100&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;將 iterable 與 iterator &lt;a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438"&gt;相關說明&lt;/a&gt;, 利用 Brython 與 Ace Editor 整理在這個頁面.&lt;/p&gt;
&lt;!-- 導入 brython 程式庫 --&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/brython.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/brython_stdlib.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;!-- 啟動 Brython --&gt;
&lt;p&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['./../cmsimde/static/','./../downloads/py/']});
}
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 FileSaver 與 filereader --&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/ace/FileSaver.min.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/filereader.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 ace --&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script src="./../cmsimde/static/ace/ace.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/ext-language_tools.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/mode-python3.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/ace/snippets/python.js" type="text/javascript"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 --&gt;
&lt;script src="./../cmsimde/static/Cango-24v03-min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/gearUtils-09.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/SVGpathUtils-6v03-min.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/sylvester.js"&gt;&lt;/script&gt;
&lt;script src="./../cmsimde/static/PrairieDraw.js"&gt;&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/javascript"&gt;
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 開始 --&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 結束--&gt;&lt;/p&gt;
&lt;!-- editor1 開始 --&gt;
&lt;p&gt;&lt;!-- 用來顯示程式碼的 editor 區域 --&gt;&lt;/p&gt;
&lt;div id="kw_editor1" style="width: 600px; height: 300px;"&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 存擋表單開始 --&gt;&lt;/p&gt;
&lt;form&gt;&lt;label&gt;Filename: &lt;input id="kw_filename" placeholder="input file name" type="text"/&gt;.py&lt;/label&gt; &lt;input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/&gt;&lt;/form&gt;
&lt;p&gt;&lt;!-- 存擋表單結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕開始 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;button id="kw_run1"&gt;Run&lt;/button&gt; &lt;button id="kw_show_console1"&gt;Output&lt;/button&gt; &lt;button id="kw_clear_console1"&gt;清除輸出區&lt;/button&gt;&lt;button id="clear_bd1"&gt;清除繪圖區&lt;/button&gt;&lt;button onclick="window.location.reload()"&gt;Reload&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 程式執行 ouput 區 --&gt;&lt;/p&gt;
&lt;div style="width: 100%; height: 100%;"&gt;&lt;textarea autocomplete="off" id="kw_console1"&gt;&lt;/textarea&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --&gt;&lt;/p&gt;
&lt;div id="brython_div1"&gt;&lt;/div&gt;
&lt;!-- editor1 結束 --&gt;
&lt;hr/&gt;&lt;!-- ########################################## --&gt;&lt;p&gt;從 1 累加到 100 part2:&lt;/p&gt;
&lt;p&gt;&lt;button id="add1to100part2"&gt;1 add to 100&lt;/button&gt;&lt;button id="cango_three_gears"&gt;cango_three_gears&lt;/button&gt;&lt;button id="bsnake"&gt;BSnake&lt;/button&gt;&lt;button id="aitetris"&gt;AI Tetris&lt;/button&gt;&lt;button id="threejsblock"&gt;Rotating Block&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--&gt;&lt;/p&gt;
&lt;p&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 part2 開始 --&gt;
&lt;script type="text/python3"&gt;
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
&lt;/script&gt;
&lt;/p&gt;
&lt;p&gt;&lt;!-- add 1 to 100 part2 結束--&gt;&lt;/p&gt;
&lt;!-- editor2 開始 --&gt;
&lt;p&gt;&lt;!-- 用來顯示程式碼的 editor 區域 --&gt;&lt;/p&gt;
&lt;div id="kw_editor2" style="width: 600px; height: 300px;"&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 存擋表單開始 --&gt;&lt;/p&gt;
&lt;form&gt;&lt;label&gt;Filename: &lt;input id="kw_filename2" placeholder="input file name" type="text"/&gt;.py&lt;/label&gt; &lt;input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/&gt;&lt;/form&gt;
&lt;p&gt;&lt;!-- 存擋表單結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕開始 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;button id="kw_run2"&gt;Run&lt;/button&gt; &lt;button id="kw_show_console2"&gt;Output&lt;/button&gt; &lt;button id="kw_clear_console2"&gt;清除輸出區&lt;/button&gt;&lt;button id="clear_bd2"&gt;清除繪圖區&lt;/button&gt;&lt;button onclick="window.location.reload()"&gt;Reload&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 執行與清除按鈕結束 --&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- 程式執行 ouput 區 --&gt;&lt;/p&gt;
&lt;div style="width: 100%; height: 100%;"&gt;&lt;textarea autocomplete="off" id="kw_console2"&gt;&lt;/textarea&gt;&lt;/div&gt;
&lt;p&gt;&lt;!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --&gt;&lt;/p&gt;
&lt;div id="brython_div2"&gt;&lt;/div&gt;
&lt;!-- editor2 結束 --&gt;
&lt;hr/&gt;&lt;p&gt;
&lt;script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"&gt;&lt;/script&gt;</content><category term="w1 09"></category><category term="網誌編寫 09"></category></entry></feed>